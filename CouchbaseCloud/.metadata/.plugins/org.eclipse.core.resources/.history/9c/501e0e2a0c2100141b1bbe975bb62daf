
# Create your views here.

from django.shortcuts import render_to_response
from django.contrib.auth import authenticate, login

from django.views.decorators.csrf import csrf_exempt
from django.http import HttpResponse

from libcloud.compute.types import Provider
from libcloud.compute.providers import get_driver

import json

from couchbase import Couchbase
from couchbase import *

import subprocess
import os
from django.conf import settings

import ConfigParser
from time import sleep

import sys

import copy

cb = Couchbase.connect(bucket="default", host="localhost")
    
    
    
request = cb.get("DeploymentRequest").value

location = request['loc']

if  location == 'East':
    cls = get_driver(Provider.EC2_US_EAST)
    
AWS_EC2_ACCESS_ID = request['ackey']
AWS_EC2_SECRET_KEY = request['seckey']

driver = cls(AWS_EC2_ACCESS_ID, AWS_EC2_SECRET_KEY)

ACCESS_KEY_NAME = 'piushs'


sizes = driver.list_sizes()

for size in sizes:
    print size

MY_SIZE = 'm3.large'
MY_IMAGE = 'ami-76817c1e'


size = [s for s in sizes if s.id == MY_SIZE][0]

image = driver.get_image(MY_IMAGE)

print image
print size

y = request.POST.get("cpus")
a=0

n = int(y)
nodes = list()
while a < n :
    node = driver.create_node(name="Test{0}".format(a), image=image, size=size, ex_keyname=ACCESS_KEY_NAME)
    nodes.append(node)
    a = a+1;  

nodesup = list()    
for node in nodes :
    while node.state != 0 :
        regionNodes = driver.list_nodes() 
        node = [val for val in regionNodes if val.id == node.id][0]
        continue
    nodesup.append(node)

for node in nodesup:
    print node.__dict__


bucket =[]
vms = []

for node in nodesup :
    vms.append({'ip' : convert_node_ip_string(node.public_ips), 'nodeid':node.id})
    
bucket.append ({ 'name' : "default", 'vm':vms });

print "hehhr" 
print result

try :
    store = result
    result = json.loads(result)
except:
    result = store
    
if result['deploy'] == None:
    print "1"
    result['deploy'] = [{'name':depname,'Provider':provider,'cpu': cpus,'cbi':cbs, 'loc':loc, 'mc':mc, 'bucket': bucket}]
else :
    print "2"
    result['deploy'].append({'name':depname,'Provider':provider,'cpu': cpus,'cbi':cbs, 'loc':loc, 'mc':mc, 'bucket' : bucket})


print result       
cb.set("user::{0}".format(username), result)
   
aws_mkfile(nodesup)
    
obj = {'filename':'test.ini', 'status' : 'RD'}


cb.set("requesttable",obj)
