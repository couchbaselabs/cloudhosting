# Perf-rebalance test with views
# 6 clients
# 600 memcache ops/sec
# 240 queries/sec
# 80% reads, 20% writes (12% updates/deletes, 8% inserts)
# 500K dataset, non DGM
# 1 design ddoc, 8 views
# Rebalance from 2 to 3 nodes
# Rebalance after 50K queries, 800K queries total

performance.iperf.RebalanceTests.test_views_rebalance

params:

# general
batch=50
kind=json
mem_quota=2500

# load phase
items=500000
hot_init_items=1000

# index phase
views=[8]

# access phase
ratio_sets=0.2
ratio_misses=0.05
ratio_creates=0.40
ratio_deletes=0.50
ratio_hot=0.2
ratio_hot_gets=0.99
ratio_hot_sets=0.99
ratio_expirations=0.0
bg_max_ops_per_sec=100
fg_max_ops_per_sec=40
fg_max_ops=800000
rebalance_after=50000
total_clients=6

# Rebalance
num_nodes_before=2
num_nodes_after=2
bg_protocol=memcached-binary

# control (defaults: pytests/performance/perf_defaults.py)
mcsoda_heartbeat=3
tear_down=1
tear_down_proxy=1
tear_down_bucket=0
tear_down_cluster=1
tear_down_on_setup=0
cbm=1
master_events=1
