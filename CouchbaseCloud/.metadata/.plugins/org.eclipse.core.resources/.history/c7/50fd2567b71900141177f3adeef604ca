# write 8M load, 3M hot reload, 30M access creates, no draining
# ---------------------------
# [expectations]
# active residential = 0.85
# cache miss ratio = 0.01
# runtime = ~6 hrs (without access draining)
# ---------------------------
# 2K * 3M    = 6G  (load: reload)
# 2K * 8M    = 16G (load: active) 
#              38% (hot items ratio) 
# ----------------------------
# 2K * 8M    = 16G (assumption: replica, if force "wait for drain") 
# ---------------------------
# 2K * 30M * 15% = 9G (access: new items) 
# 2K * 30M * 5%  = 3G (access: deleted items)
#                  6G (access retained earnings)
# ---------------------------
# 16G + 6G = 22G      (final active data size) 
# active residential < 20G / 22G = 90%
# system memory: 20G per node

performance.eperf.EPerfClient.test_eperf_write

params:

# general
batch=50
kind=nonjson
mem_quota=20000
spec=write-suv-2

# load phase
hot_init_items=3000000
items=8000000

# access phase
# Read:Insert:Update:Delete Ratio = 20:15:60:5.
ratio_sets=0.8
ratio_misses=0.05
ratio_creates=0.1875
ratio_deletes=0.0769
ratio_hot=0.38
ratio_hot_gets=0.995
ratio_hot_sets=0.995
ratio_expirations=0
max_creates=30000000

# control (defaults: pytests/performance/perf_defaults.py)
load_wait_until_drained=1
loop_wait_until_drained=0
mcsoda_heartbeat=3
tear_down=1
tear_down_proxy=1
tear_down_bucket=0
tear_down_cluster=1
tear_down_on_setup=0
