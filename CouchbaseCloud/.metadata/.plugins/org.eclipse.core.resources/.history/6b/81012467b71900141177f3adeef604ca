# Rebalance test with views
# 8K ops/sec
# 80% reads, 20% writes (12% updates/deletes, 8% inserts)
# 60M dataset (DGM)
# 1 ddoc with 3 views
# Rebalance from 3 to 4 nodes

performance.iperf.RebalanceTests.test_views_rebalance

params:

# general
batch=50
kind=json
mem_quota=80000
index_replicas=0

# load phase
items=60000000
hot_init_items=6000000

# index phase
views=[3]

# access phase
ratio_sets=0.2
ratio_misses=0.0
ratio_creates=0.40
ratio_deletes=0.50
ratio_hot=0.1
ratio_hot_gets=0.99
ratio_hot_sets=0.99
ratio_expirations=0.03
bg_max_ops_per_sec=333
max_creates=900000000000
fg_max_ops=900000000000
fg_max_ops_per_sec=35
total_clients=24

# rebalance
rebalance_moves_before_compaction=128
reb_mode=0
reb_max_retries=3
num_nodes_after=2
rebalance_after=1200
shutdown_after=600

# control (defaults: pytests/performance/perf_defaults.py)
load_wait_until_drained=1
loop_wait_until_drained=0
mcsoda_heartbeat=3
tear_down=1
tear_down_proxy=1
tear_down_bucket=0
tear_down_cluster=1
tear_down_on_setup=0
bg_protocol=memcached-binary
cbm=1
master_events=1
